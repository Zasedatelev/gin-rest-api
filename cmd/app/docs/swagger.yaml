basePath: /
definitions:
  github_com_Oleg-OMON_gin-rest-api_git_internal_models.Game:
    properties:
      city:
        $ref: '#/definitions/null.String'
      gameDate:
        type: string
      gameId:
        type: integer
      goals:
        $ref: '#/definitions/null.Uint'
      own:
        $ref: '#/definitions/null.Uint'
      team:
        type: string
    type: object
  github_com_Oleg-OMON_gin-rest-api_git_internal_models.Player:
    properties:
      citizenship:
        $ref: '#/definitions/sql.NullString'
      dob:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      nickname:
        type: string
      playerId:
        type: integer
      role:
        type: string
    type: object
  github_com_Oleg-OMON_gin-rest-api_git_internal_models.ResultModelsPlayerLineup:
    properties:
      cards:
        $ref: '#/definitions/null.String'
      goals:
        $ref: '#/definitions/null.Uint'
      nickname:
        description: Тут нужна композиция что бы не дублировать поля, а просто ссылать
          на их тип?
        type: string
      start:
        type: string
      team:
        type: string
      timeIn:
        $ref: '#/definitions/null.Float64'
    type: object
  github_com_Oleg-OMON_gin-rest-api_git_internal_models.SingInInput:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  github_com_Oleg-OMON_gin-rest-api_git_internal_models.SingUpInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      passwordConfirm:
        type: string
    type: object
  null.Float64:
    properties:
      float64:
        type: number
      valid:
        description: Valid is true if Float64 is not NULL
        type: boolean
    type: object
  null.String:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  null.Uint:
    properties:
      uint:
        type: integer
      valid:
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    name: Oleg Zasedatelev
  description: Привет. Мой не большой проект для изучения програмирования API на Go.
  title: Test Golang API
  version: "1.20"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: form data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_Oleg-OMON_gin-rest-api_git_internal_models.SingInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: BAD REQUEST
          schema:
            type: string
        "404":
          description: NOT FOUND
          schema:
            type: string
      summary: login user
      tags:
      - auth
  /api/games/all_games:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Oleg-OMON_gin-rest-api_git_internal_models.Game'
            type: array
      summary: Get all games
      tags:
      - games
  /api/games/all_players:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_Oleg-OMON_gin-rest-api_git_internal_models.Player'
            type: array
      summary: Get all players
      tags:
      - games
  /api/games/get_player/{nickname}:
    get:
      parameters:
      - description: player nickname
        in: path
        name: nickname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Oleg-OMON_gin-rest-api_git_internal_models.Player'
      summary: Retrieves user based on given name
  /api/games/results_games/{nickname}:
    get:
      consumes:
      - application/json
      description: get list by nickname
      parameters:
      - description: player nickname
        in: path
        name: nickname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Oleg-OMON_gin-rest-api_git_internal_models.ResultModelsPlayerLineup'
      summary: get games involving the player
      tags:
      - games
  /auth/register:
    post:
      description: post user
      parameters:
      - description: form data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_Oleg-OMON_gin-rest-api_git_internal_models.SingUpInput'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: BAD REQUEST
          schema:
            type: string
        "404":
          description: NOT FOUND
          schema:
            type: string
      summary: register user
      tags:
      - auth
swagger: "2.0"
